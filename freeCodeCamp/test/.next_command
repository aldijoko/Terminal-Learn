find -src name
find src -name
find -name client/src
find -wholename client/src
find name src
find -name
find --name src
find -name -src
cd ..
find -name src
find
cd client
mkdir assets
cd assets/
mkdir images
cd images/
touch background.jpg
cd ..
cd ..
cd ..
ls --color=auto
mv iamges client/assets
mv images client/assets
cd images
ls --color=auto
mv background.jpg client/assets/images
find
cd ..
cd client/assets/
ls --color=auto
cd images/
ls --color=auto
cd website
cd ./website
cd ../../..
cd images/
ls --color=auto
mv header.png ..
ls --color=auto
cd ..
ls --color=auto
find
find -images
find -images client
find -name images
mv header.png client/assets/images
find -name header.png
find -name footer.jpeg
mv footer.jpeg client/assets/images/
mv images/footer.jpeg client/assets/images/
find
rmdir images
rm images/background.jpg
rmdir images/
ls --color=auto
mkdir client/assets/
mkdir client/assets/icons
ls --color=auto
find
ls --color=auto
mv CodeAlly.svg client/assets/icons/
find
ls --color=auto
mv CodeRoad.svg client/assets/icons/
mv freeCodeCamp.svg client/assets/icons/
find
mkdir client/assets/fonts
touch roboto-bold.woff client/assets/fonts/
find
ls --color=auto
rm roboto-bold.woff
ls --color=auto
touch client/assets/fonts/ roboto-bold.woff
ls --color=auto
rm roboto-bold.woff
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find
find client/assets/fonts/
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
find
rm --help
rm -r fonts
ls --color=auto
ls --color=auto
touch package.json
touch server.js
touch README.md
ls --color=auto
echo Yay!
echo I finished the boilerplate!
echo one more thing...
echo I made this boilerplate README.md
ls --color=auto
echo I made this boilerplae >> README.md
ls --color=auto
echo "I made this boilerplate" >> README.md
echo I made this boilerplae >> README.md
ls --color=auto
echo I made this boilerplate >> README.md
more README.md
echo I made this boilerplate 2 >> README.md
echo I made this boilerplate 2 >> README.md
echo I made this boilerplate >> README.md
echo testing >> README.md
more README.md
echo from the command line >> README.md
more README.md
echo for the freeCodeCamp bash lessons >> README.md
more README.md
ls --color=auto
cd ..
ls --color=auto
mv website website-boilerplate
ls --color=auto
cp --help
cp -r toms-website
cp -r website-boilerplate toms-website
ls --color=auto
find
find toms-website
find website-boilerplate/
clear
echo goodbye terminal
exit
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
